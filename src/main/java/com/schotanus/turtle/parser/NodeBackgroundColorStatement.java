/* Generated By:JJTree: Do not edit this line. NodeBackgroundColorStatement.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=Node,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.schotanus.turtle.parser;

import java.awt.Color;


public
class NodeBackgroundColorStatement extends SimpleNode {
  public NodeBackgroundColorStatement(int id) {
    super(id);
  }

  public NodeBackgroundColorStatement(TurtleParser p, int id) {
    super(p, id);
  }

  /**
   * Interprets: background color red_expr, green_expr, blue_expr
   * <br>the children of this statement are the red, green and blue
   * expressions. They are all interpreted and popped from the stack. The
   * value of either expression is coerced to be between 0 and 255 inclusive
   * so Swing won't throw an exception when an out of range color value is
   * used.
   * @throws InterpretationException When an interpretation error occurs
   *  during the interpretation of one of the color expressions.
   */
  public void interpret() throws InterpretationException{
    int [] colors = new int[3];
    for (int i = 0; i < 3; i++) {
      jjtGetChild(i).interpret();
      colors[i] = ((Double)expressionStack.peek()).intValue();
      if (colors[i] < 0) {
        colors[ i] = 0;
      } else if (colors[i] > 255) {
        colors[i] = 255;
      }
    }
    turtleTerritoryModel.setColor(new Color(colors[0], colors[1], colors[2]));
  }
}
/* JavaCC - OriginalChecksum=ede08edaa8c7d92d9e6b6b30a8216f55 (do not edit this line) */
