/* Generated By:JJTree: Do not edit this line. NodeDivideExpression.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=Node,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.schotanus.turtle.parser;

public
class NodeDivideExpression extends SimpleNode {
  public NodeDivideExpression(int id) {
    super(id);
  }

  public NodeDivideExpression(TurtleParser p, int id) {
    super(p, id);
  }

  /**
   * Interprets: expression1 / expression2
   * <br>expression1 and expression2 are interpreted and popped from the
   * stack. The result is pushed on the stack.
   * @throws InterpretationException When expression2 evaluates to zero or
   *  when either expression could not be interpreted.
   */
  public void interpret() throws InterpretationException {
    jjtGetChild(0).interpret();
    double leftOperand = ((Double)expressionStack.pop()).doubleValue();

    jjtGetChild(1).interpret();
    double rightOperand = ((Double)expressionStack.pop()).doubleValue();

    if (rightOperand != 0) {
      expressionStack.push(new Double(leftOperand / rightOperand));
    } else {
      expressionStack.push(new Double(0.0));
      throw new InterpretationException("Division by zero!");
    }
  }
}
/* JavaCC - OriginalChecksum=7b02ea0b20a208c3c1c5935ffd2bde61 (do not edit this line) */
