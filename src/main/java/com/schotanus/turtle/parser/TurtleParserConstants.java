/* Generated By:JJTree&JavaCC: Do not edit this line. TurtleParserConstants.java */
package com.schotanus.turtle.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface TurtleParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int COMMENT = 5;
  /** RegularExpression Id. */
  int BACK = 6;
  /** RegularExpression Id. */
  int BACKGROUND = 7;
  /** RegularExpression Id. */
  int CLEAR = 8;
  /** RegularExpression Id. */
  int COLOR = 9;
  /** RegularExpression Id. */
  int COSINE = 10;
  /** RegularExpression Id. */
  int DOWN = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int FORWARD = 13;
  /** RegularExpression Id. */
  int HEAD = 14;
  /** RegularExpression Id. */
  int HIDE = 15;
  /** RegularExpression Id. */
  int HOME = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int LEFT = 18;
  /** RegularExpression Id. */
  int PEN = 19;
  /** RegularExpression Id. */
  int POSITION = 20;
  /** RegularExpression Id. */
  int PRINT = 21;
  /** RegularExpression Id. */
  int REPCOUNT = 22;
  /** RegularExpression Id. */
  int REPEAT = 23;
  /** RegularExpression Id. */
  int RIGHT = 24;
  /** RegularExpression Id. */
  int SCREEN = 25;
  /** RegularExpression Id. */
  int SINE = 26;
  /** RegularExpression Id. */
  int SHOW = 27;
  /** RegularExpression Id. */
  int TO = 28;
  /** RegularExpression Id. */
  int TURTLE = 29;
  /** RegularExpression Id. */
  int UP = 30;
  /** RegularExpression Id. */
  int XPOSITION = 31;
  /** RegularExpression Id. */
  int WHILE = 32;
  /** RegularExpression Id. */
  int YPOSITION = 33;
  /** RegularExpression Id. */
  int COLON = 34;
  /** RegularExpression Id. */
  int COMMA = 35;
  /** RegularExpression Id. */
  int LBRACKET = 36;
  /** RegularExpression Id. */
  int LPARENS = 37;
  /** RegularExpression Id. */
  int POINT = 38;
  /** RegularExpression Id. */
  int QUOTE = 39;
  /** RegularExpression Id. */
  int RBRACKET = 40;
  /** RegularExpression Id. */
  int RPARENS = 41;
  /** RegularExpression Id. */
  int DIVIDE = 42;
  /** RegularExpression Id. */
  int MINUS = 43;
  /** RegularExpression Id. */
  int MULTIPLY = 44;
  /** RegularExpression Id. */
  int PLUS = 45;
  /** RegularExpression Id. */
  int POWER = 46;
  /** RegularExpression Id. */
  int EQUALS = 47;
  /** RegularExpression Id. */
  int GT = 48;
  /** RegularExpression Id. */
  int GTE = 49;
  /** RegularExpression Id. */
  int LT = 50;
  /** RegularExpression Id. */
  int LTE = 51;
  /** RegularExpression Id. */
  int UNEQUAL = 52;
  /** RegularExpression Id. */
  int CONSTANT = 53;
  /** RegularExpression Id. */
  int FLOAT = 54;
  /** RegularExpression Id. */
  int INTEGER = 55;
  /** RegularExpression Id. */
  int DIGIT = 56;
  /** RegularExpression Id. */
  int STRING_LITERAL = 57;
  /** RegularExpression Id. */
  int NAME = 58;
  /** RegularExpression Id. */
  int VARIABLE = 59;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\t\"",
    "<COMMENT>",
    "\"back\"",
    "\"background\"",
    "\"clear\"",
    "\"color\"",
    "\"cos\"",
    "\"down\"",
    "\"else\"",
    "\"forward\"",
    "\"head\"",
    "\"hide\"",
    "\"home\"",
    "\"if\"",
    "\"left\"",
    "\"pen\"",
    "\"position\"",
    "\"print\"",
    "\"repcount\"",
    "\"repeat\"",
    "\"right\"",
    "\"screen\"",
    "\"sin\"",
    "\"show\"",
    "\"to\"",
    "\"turtle\"",
    "\"up\"",
    "\"xposition\"",
    "\"while\"",
    "\"yposition\"",
    "\":\"",
    "\",\"",
    "\"[\"",
    "\"(\"",
    "\".\"",
    "\"\\\"\"",
    "\"]\"",
    "\")\"",
    "\"/\"",
    "\"-\"",
    "\"*\"",
    "\"+\"",
    "\"^\"",
    "\"==\"",
    "\">\"",
    "\">=\"",
    "\"<\"",
    "\"<=\"",
    "\"!=\"",
    "<CONSTANT>",
    "<FLOAT>",
    "<INTEGER>",
    "<DIGIT>",
    "<STRING_LITERAL>",
    "<NAME>",
    "<VARIABLE>",
  };

}
