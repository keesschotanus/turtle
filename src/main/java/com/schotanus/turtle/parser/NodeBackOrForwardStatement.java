/* Generated By:JJTree: Do not edit this line. NodeBackOrForwardStatement.java Version 7.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=Node,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.schotanus.turtle.parser;

public
class NodeBackOrForwardStatement extends SimpleNode {
    /**
     * Determines whether the turtle should move forward (true) or backwards
     * (false).
     */
    private boolean forward;  public NodeBackOrForwardStatement(int id) {

      super(id);
  }

  public NodeBackOrForwardStatement(TurtleParser p, int id) {
    super(p, id);
  }

     /**
     * Member access.
     * @param forward {@link #forward}.
     */
    public void setForward(final boolean forward) {
      this.forward = forward;
  }

  /**
   * Interprets either: BACK expression or FORWARD expression
   * <br>The expression is interpreted and popped from the stack. The
   * resulting value is used to move the turtle.
   * @throws InterpretationException When an interpretation error occurs
   *  during the interpretation of the expression.
   */
  public void interpret() throws InterpretationException{
    jjtGetChild(0).interpret();
    double distance = ((Double)expressionStack.pop()).doubleValue();

    if (forward) {
      getActiveTurtleModel().move(distance);
    } else {
      getActiveTurtleModel().move(-distance);
    }
  }
}
/* JavaCC - OriginalChecksum=88ec9c5e400c43058e4330adca212c33 (do not edit this line) */
